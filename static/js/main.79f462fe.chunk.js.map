{"version":3,"sources":["redux/phonebook-operation.js","redux/phonebook-types.js","redux/phonebook-reducer.js","redux/store.js","components/AddContact/AddContactForm.styled.jsx","components/Button/Button.styled.jsx","components/AddContact/AddContact.jsx","redux/phonebook-actions.js","components/Contacts/FindContact.jsx","components/Contacts/Contacts.styled.jsx","components/Button/Button.jsx","components/Contacts/ContactList.jsx","redux/phonebook-selectors.js","components/Section/Section.jsx","components/App/App.styled.jsx","App.jsx","index.js"],"names":["phonebookApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","getContacts","query","providesTags","addContact","mutation","name","number","url","method","body","invalidatesTags","deleteContact","id","useGetContactsQuery","useAddContactMutation","useDeleteContactMutation","filter","createReducer","types","_","action","payload","store","configureStore","reducer","middleware","getDefaultMiddleware","concat","setupListeners","dispatch","Form","styled","form","Input","input","Label","label","ButtonPhonebook","button","AddContact","useState","setName","setNumber","console","log","reset","e","currentTarget","value","onSubmit","preventDefault","inputForms","map","type","pattern","title","required","htmlFor","placeholder","onChange","event","handleChange","target","filterContact","createAction","FindContact","useDispatch","connect","ItemListContact","li","ItemContact","span","List","ul","Button","onClick","ContactList","data","contacts","useSelector","state","normalizedFilter","toLowerCase","contact","includes","getListContact","Section","children","Container","div","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"okDAEaA,EAAeC,YAAU,CACpCC,YAAa,eACbC,UAAWC,YAAe,CAAEC,QAAS,0BACrCC,SAAU,CAAC,aACXC,UAAW,SAAAC,GAAO,MAAK,CACrBC,YAAaD,EAAQE,MAAM,CACzBA,MAAO,iBAAM,aACbC,aAAc,CAAC,eAEjBC,WAAYJ,EAAQK,SAAS,CAC3BH,MAAO,SAACI,EAAMC,GAAP,MAAmB,CACxBC,IAAK,YACLC,OAAQ,OACRC,KAAMJ,EACNC,WAEFI,gBAAiB,CAAC,eAEpBC,cAAeZ,EAAQK,SAAS,CAC9BH,MAAO,SAAAW,GAAE,MAAK,CACZL,IAAI,aAAD,OAAeK,GAClBJ,OAAQ,SACRC,KAAMG,IAERF,gBAAiB,CAAC,mBAMtBG,EAGEtB,EAHFsB,oBACAC,EAEEvB,EAFFuB,sBACAC,EACExB,EADFwB,yBCjCa,EAGL,SCDGC,EAASC,YAAc,GAAD,eAChCC,GAAe,SAACC,EAAGC,GAAJ,OAAeA,EAAOC,YCElCC,EAAQC,YAAe,CAC3BC,SAAO,mBACJjC,EAAaE,YAAcF,EAAaiC,SADpC,uBAELR,GAFK,GAIPS,WAAY,SAAAC,GAAoB,OAC9BA,IAAuBC,OAAOpC,EAAakC,eAE/CG,YAAeN,EAAMO,UAONP,I,QAAAA,I,wCCnBFQ,EAAOC,IAAOC,KAAV,qJAQJC,EAAQF,IAAOG,MAAV,uKASLC,EAAQJ,IAAOK,MAAV,4DCjBLC,EAAkBN,IAAOO,OAAV,wN,OCMb,SAASC,IACtB,MAAwBC,mBAAS,IAAjC,mBAAOnC,EAAP,KAAaoC,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAOlC,EAAP,KAAeoC,EAAf,KACA,EAAqB5B,IAAdX,EAAP,oBAEAwC,QAAQC,IAAI,OAAQvC,GACpBsC,QAAQC,IAAI,SAAUtC,GACtB,IAoBMuC,EAAQ,SAAAC,GACZL,EAAQ,IACRC,EAAU,IACVI,EAAEC,cAAc1C,KAAK2C,MAAQ,GAC7BF,EAAEC,cAAczC,OAAO0C,MAAQ,IAGjC,OACE,eAAClB,EAAD,CAAMmB,SAfa,SAAAH,GACnBA,EAAEI,iBACFP,QAAQC,IAAI,gBAAiBvC,GAC7BsC,QAAQC,IAAI,kBAAmBtC,GAC/BH,EAAW,CAAEE,OAAMC,WACnBuC,EAAMC,IAUN,UACGK,EAAWC,KAAI,gBAAGxC,EAAH,EAAGA,GAAIyC,EAAP,EAAOA,KAAMhD,EAAb,EAAaA,KAAMiD,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,MAAOC,EAAnC,EAAmCA,SAAnC,OACd,eAACrB,EAAD,CAAOsB,QAAS7C,EAAhB,UACE,6BAAKP,IACL,cAAC4B,EAAD,CACErB,GAAIA,EACJyC,KAAMA,EACNhD,KAAMA,EACNiD,QAASA,EACTC,MAAOA,EACPC,SAAUA,EACVE,YAAarD,EACbsD,SAAU,SAAAC,GAAK,OAxCJ,SAAC,EAAUZ,GAC9B,OADwC,EAAlB3C,MAEpB,IAAK,OACHoC,GAAQ,kBAAMO,KACd,MACF,IAAK,SACHN,GAAU,kBAAMM,MAkCOa,CAAa,CAAExD,QAAQuD,EAAME,OAAOd,YAVlC3C,MAc3B,cAACgC,EAAD,CAAiBgB,KAAK,SAAtB,4BCzDC,IAAMU,EAAgBC,YAAa9C,GCInC,SAAS+C,EAAT,GAAiC,IAAVV,EAAS,EAATA,MACtB1B,EAAWqC,cACjB,OACE,gCACE,6BAAKX,IACL,cAACtB,EAAD,CACEoB,KAAK,OACLM,SAAU,SAAAb,GAAC,OAAIjB,EAASkC,EAAcjB,EAAEgB,OAAOd,cAUxCmB,YAAQF,GAARE,I,MCrBFC,EAAkBrC,IAAOsC,GAAV,2FAMfC,EAAcvC,IAAOwC,KAAV,iDAIXC,EAAOzC,IAAO0C,GAAV,iECRJC,EAAS,SAAC,GAAD,IAAGnB,EAAH,EAAGA,MAAOF,EAAV,EAAUA,KAAMsB,EAAhB,EAAgBA,QAAhB,OACpB,cAACtC,EAAD,CAAiBgB,KAAMA,EAAMsB,QAASA,EAAtC,SACGpB,KCQE,SAASqB,IACd,IAAQC,EAAShE,IAATgE,KACR,EAAwB9D,IAAjBJ,EAAP,oBACMmE,EAAWC,aAAY,SAAAC,GAAK,OCjBN,SAACH,EAAMG,GACnC,IACMC,EADYD,EAAMhE,OACWkE,cAEnC,OAAOL,EACHA,EAAK7D,QAAO,SAAAmE,GAAO,OACjBA,EAAQ9E,KAAK6E,cAAcE,SAASH,MAEtC,GDSkCI,CAAeR,EAAMG,MAE3D,OACE,cAACR,EAAD,UACGM,GACCA,EAAS1B,KAAI,gBAAGxC,EAAH,EAAGA,GAAIP,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACX,eAAC8D,EAAD,WACE,eAACE,EAAD,WAAcjE,EAAd,OACA,cAACiE,EAAD,UAAchE,IACd,cAAC,EAAD,CACEiD,MAAO,SACPF,KAAK,SACLsB,QAAS,kBAAMhE,EAAcC,QANXA,QAwBjBuD,YAAQS,GAART,I,EE5CFmB,EAAU,SAAC,GAAD,IAAG/B,EAAH,EAAGA,MAAOgC,EAAV,EAAUA,SAAV,OACrB,gCACE,6BAAKhC,IACJgC,MCJQC,EAAYzD,IAAO0D,IAAV,8CCIP,SAASC,IACtB,OACE,eAACF,EAAD,WACE,cAAC,EAAD,CAASjC,MAAO,YAAhB,SACE,cAAChB,EAAD,MAEF,cAAC0B,EAAD,CAAaV,MAAO,yBACpB,cAACqB,EAAD,OCJNe,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUvE,MAAOA,EAAjB,SACE,cAAC,IAAD,UACE,cAACoE,EAAD,UAINI,SAASC,eAAe,W","file":"static/js/main.79f462fe.chunk.js","sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\nexport const phonebookApi = createApi({\r\n  reducerPath: 'phonebookApi',\r\n  baseQuery: fetchBaseQuery({ baseUrl: 'http://localhost:3000' }),\r\n  tagTypes: ['Phonebook'],\r\n  endpoints: builder => ({\r\n    getContacts: builder.query({\r\n      query: () => '/contacts',\r\n      providesTags: ['Phonebook'],\r\n    }),\r\n    addContact: builder.mutation({\r\n      query: (name, number) => ({\r\n        url: '/contacts',\r\n        method: 'POST',\r\n        body: name,\r\n        number,\r\n      }),\r\n      invalidatesTags: ['Phonebook'],\r\n    }),\r\n    deleteContact: builder.mutation({\r\n      query: id => ({\r\n        url: `/contacts/${id}`,\r\n        method: 'DELETE',\r\n        body: id,\r\n      }),\r\n      invalidatesTags: ['Phonebook'],\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useGetContactsQuery,\r\n  useAddContactMutation,\r\n  useDeleteContactMutation,\r\n} = phonebookApi;\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nexport default {\r\n  ADD: 'phonebook/add',\r\n  DELETE: 'phonebook/delete',\r\n  FILTER: 'filter',\r\n};\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport types from './phonebook-types';\r\n\r\nexport const filter = createReducer('', {\r\n  [types.FILTER]: (_, action) => action.payload,\r\n});\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport { setupListeners } from '@reduxjs/toolkit/query';\r\nimport { phonebookApi } from './phonebook-operation';\r\nimport { filter } from './phonebook-reducer';\r\n// import phonebookReducer from './phonebook-reducer';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    [phonebookApi.reducerPath]: phonebookApi.reducer,\r\n    filter,\r\n  },\r\n  middleware: getDefaultMiddleware =>\r\n    getDefaultMiddleware().concat(phonebookApi.middleware),\r\n});\r\nsetupListeners(store.dispatch);\r\n// const store = configureStore({\r\n//   reducer: {\r\n//     phonebook: phonebookReducer,\r\n//   },\r\n// });\r\n\r\nexport default store;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Form = styled.form`\r\n  width: 50%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  text-transform: capitalize;\r\n  border: 2px solid #333333;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  padding: 10px;\r\n  border: 1px solid rgb(42, 136, 136);\r\n  outline: none;\r\n  &: focus {\r\n    border: 5px solid rgb(42, 136, 136);\r\n  } ;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  padding: 15px 15px 0px 15px;\r\n`;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const ButtonPhonebook = styled.button`\r\n  padding: 10px;\r\n  width: 150px;\r\n  margin: 20px 15px 15px 15px;\r\n  border: 1px solid rgb(42, 136, 136);\r\n\r\n  &:focus {\r\n    background-color: rgb(42, 136, 136);\r\n    color: white;\r\n  }\r\n`;\r\n","import { useState } from 'react';\r\nimport { useAddContactMutation } from '../../redux/phonebook-operation';\r\nimport inputForms from '../data/inputForms.json';\r\nimport { Form } from './AddContactForm.styled';\r\nimport { Label } from './AddContactForm.styled';\r\nimport { Input } from './AddContactForm.styled';\r\nimport { ButtonPhonebook } from '../Button/Button.styled';\r\n\r\nexport default function AddContact() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const [addContact] = useAddContactMutation();\r\n\r\n  console.log('name', name);\r\n  console.log('number', number);\r\n  const handleChange = ({ name }, value) => {\r\n    switch (name) {\r\n      case 'name':\r\n        setName(() => value);\r\n        break;\r\n      case 'number':\r\n        setNumber(() => value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    console.log('name onSubmit', name);\r\n    console.log('number onSubmit', number);\r\n    addContact({ name, number });\r\n    reset(e);\r\n  };\r\n  const reset = e => {\r\n    setName('');\r\n    setNumber('');\r\n    e.currentTarget.name.value = '';\r\n    e.currentTarget.number.value = '';\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      {inputForms.map(({ id, type, name, pattern, title, required }) => (\r\n        <Label htmlFor={id} key={name}>\r\n          <h3>{name}</h3>\r\n          <Input\r\n            id={id}\r\n            type={type}\r\n            name={name}\r\n            pattern={pattern}\r\n            title={title}\r\n            required={required}\r\n            placeholder={name}\r\n            onChange={event => handleChange({ name }, event.target.value)}\r\n          />\r\n        </Label>\r\n      ))}\r\n      <ButtonPhonebook type=\"submit\">Add contact</ButtonPhonebook>\r\n    </Form>\r\n  );\r\n}\r\n","import { createAction } from '@reduxjs/toolkit';\r\nimport types from './phonebook-types';\r\nexport const filterContact = createAction(types.FILTER);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport { filterContact } from '../../redux/phonebook-actions';\r\nimport { Input } from '../AddContact/AddContactForm.styled';\r\n\r\nexport function FindContact({ title }) {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div>\r\n      <h3>{title}</h3>\r\n      <Input\r\n        type=\"text\"\r\n        onChange={e => dispatch(filterContact(e.target.value))}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nFindContact.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default connect(FindContact);\r\n","import styled from '@emotion/styled';\r\n\r\nexport const ItemListContact = styled.li`\r\n  display: flex;\r\n  align-items: center;\r\n  list-style: none;\r\n`;\r\n\r\nexport const ItemContact = styled.span`\r\n  min-width: 150px;\r\n`;\r\n\r\nexport const List = styled.ul`\r\n  padding: 0px;\r\n  font-size: 20px;\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ButtonPhonebook } from './Button.styled';\r\n\r\nexport const Button = ({ title, type, onClick }) => (\r\n  <ButtonPhonebook type={type} onClick={onClick}>\r\n    {title}\r\n  </ButtonPhonebook>\r\n);\r\n\r\nButton.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { ItemContact } from './Contacts.styled';\r\nimport { ItemListContact } from './Contacts.styled';\r\nimport { Button } from '../Button/Button';\r\nimport { List } from './Contacts.styled';\r\nimport { getListContact } from '../../redux/phonebook-selectors';\r\nimport {\r\n  useGetContactsQuery,\r\n  useDeleteContactMutation,\r\n} from '../../redux/phonebook-operation';\r\n\r\nexport function ContactList() {\r\n  const { data } = useGetContactsQuery();\r\n  const [deleteContact] = useDeleteContactMutation();\r\n  const contacts = useSelector(state => getListContact(data, state));\r\n\r\n  return (\r\n    <List>\r\n      {contacts &&\r\n        contacts.map(({ id, name, number }) => (\r\n          <ItemListContact key={id}>\r\n            <ItemContact>{name}:</ItemContact>\r\n            <ItemContact>{number}</ItemContact>\r\n            <Button\r\n              title={'Delete'}\r\n              type=\"button\"\r\n              onClick={() => deleteContact(id)}\r\n            />\r\n          </ItemListContact>\r\n        ))}\r\n    </List>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  phonebook: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.func,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.number.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default connect(ContactList);\r\n","export const getListContact = (data, state) => {\r\n  const getfilter = state.filter;\r\n  const normalizedFilter = getfilter.toLowerCase();\r\n\r\n  return data\r\n    ? data.filter(contact =>\r\n        contact.name.toLowerCase().includes(normalizedFilter),\r\n      )\r\n    : [];\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const Section = ({ title, children }) => (\r\n  <div>\r\n    <h2>{title}</h2>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.element.isRequired,\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Container = styled.div`\r\n  padding: 15px;\r\n`;\r\n","import AddContact from './components/AddContact/AddContact';\r\nimport { FindContact } from './components/Contacts/FindContact';\r\nimport { ContactList } from './components/Contacts/ContactList';\r\nimport { Section } from './components/Section/Section';\r\nimport { Container } from './components/App/App.styled';\r\n\r\nexport default function App() {\r\n  return (\r\n    <Container>\r\n      <Section title={'Phonebook'}>\r\n        <AddContact />\r\n      </Section>\r\n      <FindContact title={'Find contact by name'} />\r\n      <ContactList />\r\n    </Container>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}